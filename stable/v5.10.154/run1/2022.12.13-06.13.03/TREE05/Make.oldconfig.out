*
* Restart config...
*
*
* RCU Subsystem
*
Make expert-level adjustments to RCU configuration (RCU_EXPERT) [Y/n/?] y
Tree-based hierarchical RCU fanout value (RCU_FANOUT) [6] 6
Tree-based hierarchical RCU leaf-level fanout value (RCU_FANOUT_LEAF) [6] 6
Accelerate last non-dyntick-idle CPU's grace periods (RCU_FAST_NO_HZ) [N/y/?] n
Offload RCU callback processing from boot-selected CPUs (RCU_NOCB_CPU) [Y/n/?] y
Tasks Trace RCU readers use memory barriers in user and idle (TASKS_TRACE_RCU_READ_MB) [N/y/?] (NEW) 
*
* General setup
*
Compile also drivers which will not load (COMPILE_TEST) [N/y/?] n
Local version - append to kernel release (LOCALVERSION) [] 
Automatically append version information to the version string (LOCALVERSION_AUTO) [N/y/?] n
Build ID Salt (BUILD_SALT) [] 
Kernel compression mode
> 1. Gzip (KERNEL_GZIP)
  2. Bzip2 (KERNEL_BZIP2)
  3. LZMA (KERNEL_LZMA)
  4. XZ (KERNEL_XZ)
  5. LZO (KERNEL_LZO)
  6. LZ4 (KERNEL_LZ4)
  7. ZSTD (KERNEL_ZSTD)
choice[1-7?]: 1
Default init path (DEFAULT_INIT) [] 
Default hostname (DEFAULT_HOSTNAME) [(none)] (none)
Support for paging of anonymous memory (swap) (SWAP) [Y/n/?] y
System V IPC (SYSVIPC) [Y/n/?] y
POSIX Message Queues (POSIX_MQUEUE) [Y/n/?] y
General notification queue (WATCH_QUEUE) [N/y/?] n
Enable process_vm_readv/writev syscalls (CROSS_MEMORY_ATTACH) [Y/n/?] y
uselib syscall (USELIB) [Y/n/?] y
Auditing support (AUDIT) [Y/n/?] y
Preemption Model
> 1. No Forced Preemption (Server) (PREEMPT_NONE)
  2. Voluntary Kernel Preemption (Desktop) (PREEMPT_VOLUNTARY)
  3. Preemptible Kernel (Low-Latency Desktop) (PREEMPT)
choice[1-3?]: 1
CPU isolation (CPU_ISOLATION) [Y/n/?] y
Kernel .config support (IKCONFIG) [N/m/y/?] n
Enable kernel headers through /sys/kernel/kheaders.tar.xz (IKHEADERS) [N/m/y/?] n
Kernel log buffer size (16 => 64KB, 17 => 128KB) (LOG_BUF_SHIFT) [18] 18
CPU kernel log buffer size contribution (13 => 8 KB, 17 => 128KB) (LOG_CPU_MAX_BUF_SHIFT) [12] 12
Temporary per-CPU printk log buffer size (12 => 4KB, 13 => 8KB) (PRINTK_SAFE_LOG_BUF_SHIFT) [13] 13
Memory placement aware NUMA scheduler (NUMA_BALANCING) [N/y/?] n
Checkpoint/restore support (CHECKPOINT_RESTORE) [N/y/?] n
Automatic process group scheduling (SCHED_AUTOGROUP) [N/y/?] n
Enable deprecated sysfs features to support old userspace tools (SYSFS_DEPRECATED) [N/y/?] n
Kernel->user space relay support (formerly relayfs) (RELAY) [Y/?] y
Initial RAM filesystem and RAM disk (initramfs/initrd) support (BLK_DEV_INITRD) [Y/n/?] y
  Initramfs source file(s) (INITRAMFS_SOURCE) [/tmp/tmp.CWS1tXL9Ud/tools/testing/selftests/rcutorture/initrd] /tmp/tmp.CWS1tXL9Ud/tools/testing/selftests/rcutorture/initrd
  User ID to map to 0 (user root) (INITRAMFS_ROOT_UID) [0] (NEW) 
  Group ID to map to 0 (group root) (INITRAMFS_ROOT_GID) [0] (NEW) 
  Support initial ramdisk/ramfs compressed using gzip (RD_GZIP) [Y/n/?] y
  Support initial ramdisk/ramfs compressed using bzip2 (RD_BZIP2) [Y/n/?] y
  Support initial ramdisk/ramfs compressed using LZMA (RD_LZMA) [Y/n/?] y
  Support initial ramdisk/ramfs compressed using XZ (RD_XZ) [Y/n/?] y
  Support initial ramdisk/ramfs compressed using LZO (RD_LZO) [Y/n/?] y
  Support initial ramdisk/ramfs compressed using LZ4 (RD_LZ4) [Y/n/?] y
  Support initial ramdisk/ramfs compressed using ZSTD (RD_ZSTD) [Y/n/?] y
  Built-in initramfs compression mode
  > 1. Gzip (INITRAMFS_COMPRESSION_GZIP) (NEW)
    2. Bzip2 (INITRAMFS_COMPRESSION_BZIP2) (NEW)
    3. LZMA (INITRAMFS_COMPRESSION_LZMA) (NEW)
    4. XZ (INITRAMFS_COMPRESSION_XZ) (NEW)
    5. LZO (INITRAMFS_COMPRESSION_LZO) (NEW)
    6. LZ4 (INITRAMFS_COMPRESSION_LZ4) (NEW)
    7. ZSTD (INITRAMFS_COMPRESSION_ZSTD) (NEW)
    8. None (INITRAMFS_COMPRESSION_NONE) (NEW)
  choice[1-8?]: 
Boot config support (BOOT_CONFIG) [N/y/?] n
Compiler optimization level
> 1. Optimize for performance (-O2) (CC_OPTIMIZE_FOR_PERFORMANCE)
  2. Optimize for size (-Os) (CC_OPTIMIZE_FOR_SIZE)
choice[1-2?]: 1
Load all symbols for debugging/ksymoops (KALLSYMS) [Y/?] y
  Include all symbols in kallsyms (KALLSYMS_ALL) [Y/?] y
Enable bpf() system call (BPF_SYSCALL) [N/y/?] n
Enable userfaultfd() system call (USERFAULTFD) [N/y/?] n
Embedded system (EMBEDDED) [N/y/?] n
Disable heap randomization (COMPAT_BRK) [N/y/?] n
Choose SLAB allocator
  1. SLAB (SLAB)
> 2. SLUB (Unqueued Allocator) (SLUB)
choice[1-2?]: 2
Allow slab caches to be merged (SLAB_MERGE_DEFAULT) [Y/n/?] y
Randomize slab freelist (SLAB_FREELIST_RANDOM) [N/y/?] n
Harden slab freelist metadata (SLAB_FREELIST_HARDENED) [N/y/?] n
Page allocator randomization (SHUFFLE_PAGE_ALLOCATOR) [N/y/?] n
SLUB per cpu partial cache (SLUB_CPU_PARTIAL) [Y/n/?] y
Profiling support (PROFILING) [Y/n/?] y
*
* Processor type and features
*
Symmetric multi-processing support (SMP) [Y/n/?] y
Support x2apic (X86_X2APIC) [N/y/?] (NEW) 
Enable MPS table (X86_MPPARSE) [Y/n/?] y
x86 CPU resource control support (X86_CPU_RESCTRL) [N/y/?] n
Support for extended (non-PC) x86 platforms (X86_EXTENDED_PLATFORM) [Y/n/?] y
ScaleMP vSMP (X86_VSMP) [N/y/?] n
Goldfish (Virtual Platform) (X86_GOLDFISH) [N/y/?] n
Intel MID platform support (X86_INTEL_MID) [N/y/?] n
Intel Low Power Subsystem Support (X86_INTEL_LPSS) [N/y/?] n
AMD ACPI2Platform devices support (X86_AMD_PLATFORM_DEVICE) [N/y/?] n
Intel SoC IOSF Sideband support for SoC platforms (IOSF_MBI) [Y/?] y
  Enable IOSF sideband access through debugfs (IOSF_MBI_DEBUG) [N/y/?] n
Single-depth WCHAN output (SCHED_OMIT_FRAME_POINTER) [Y/n/?] y
*
* Linux guest support
*
Linux guest support (HYPERVISOR_GUEST) [Y/n/?] y
  Enable paravirtualization code (PARAVIRT) [Y/n/?] y
  paravirt-ops debugging (PARAVIRT_DEBUG) [N/y/?] (NEW) 
  Paravirtualization layer for spinlocks (PARAVIRT_SPINLOCKS) [N/y/?] (NEW) 
  Xen guest support (XEN) [N/y/?] (NEW) 
  KVM Guest support (including kvmclock) (KVM_GUEST) [Y/n/?] y
  Disable host haltpoll when loading haltpoll driver (ARCH_CPUIDLE_HALTPOLL) [Y/?] (NEW) y
  Support for running PVH guests (PVH) [N/y/?] (NEW) 
  Paravirtual steal time accounting (PARAVIRT_TIME_ACCOUNTING) [N/y/?] (NEW) 
  Jailhouse non-root cell support (JAILHOUSE_GUEST) [N/y/?] (NEW) 
  ACRN Guest support (ACRN_GUEST) [N/y/?] (NEW) 
Processor family
  1. Opteron/Athlon64/Hammer/K8 (MK8)
  2. Intel P4 / older Netburst based Xeon (MPSC)
  3. Core 2/newer Xeon (MCORE2)
  4. Intel Atom (MATOM)
> 5. Generic-x86-64 (GENERIC_CPU)
choice[1-5?]: 5
Old AMD GART IOMMU support (GART_IOMMU) [N/y/?] n
Enable Maximum number of SMP Processors and NUMA Nodes (MAXSMP) [N/y/?] n
Maximum number of CPUs (NR_CPUS) [8] 8
Multi-core scheduler support (SCHED_MC) [Y/n/?] y
  CPU core priorities scheduler support (SCHED_MC_PRIO) [Y/n/?] y
Reroute for broken boot IRQs (X86_REROUTE_FOR_BROKEN_BOOT_IRQS) [Y/n/?] y
Machine Check / overheating reporting (X86_MCE) [Y/n/?] y
  Support for deprecated /dev/mcelog character device (X86_MCELOG_LEGACY) [N/y/?] n
  Intel MCE features (X86_MCE_INTEL) [Y/n/?] y
  AMD MCE features (X86_MCE_AMD) [Y/n/?] y
Machine check injector support (X86_MCE_INJECT) [N/m/y/?] n
IOPERM and IOPL Emulation (X86_IOPL_IOPERM) [Y/n/?] y
Dell i8k legacy laptop support (I8K) [N/m/y/?] n
CPU microcode loading support (MICROCODE) [Y/n/?] y
  Intel microcode loading support (MICROCODE_INTEL) [Y/n/?] y
  AMD microcode loading support (MICROCODE_AMD) [Y/n/?] y
  Ancient loading interface (DEPRECATED) (MICROCODE_OLD_INTERFACE) [N/y/?] n
/dev/cpu/*/msr - Model-specific register support (X86_MSR) [Y/n/m/?] y
/dev/cpu/*/cpuid - CPU information support (X86_CPUID) [Y/n/m/?] y
Enable 5-level page tables support (X86_5LEVEL) [Y/n/?] y
Enable statistic for Change Page Attribute (X86_CPA_STATISTICS) [N/y/?] n
AMD Secure Memory Encryption (SME) support (AMD_MEM_ENCRYPT) [N/y/?] n
NUMA Memory Allocation and Scheduler Support (NUMA) [Y/n/?] y
  Old style AMD Opteron NUMA detection (AMD_NUMA) [Y/n/?] y
  ACPI NUMA detection (X86_64_ACPI_NUMA) [Y/n/?] y
  NUMA emulation (NUMA_EMU) [N/y/?] n
Maximum NUMA Nodes (as a power of 2) (NODES_SHIFT) [6] 6
Support non-standard NVDIMMs and ADR protected memory (X86_PMEM_LEGACY) [N/m/y/?] n
Check for low memory corruption (X86_CHECK_BIOS_CORRUPTION) [Y/n/?] y
  Set the default setting of memory_corruption_check (X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK) [Y/n/?] y
Amount of low memory, in kilobytes, to reserve for the BIOS (X86_RESERVE_LOW) [64] 64
MTRR (Memory Type Range Register) support (MTRR) [Y/?] y
  MTRR cleanup support (MTRR_SANITIZER) [N/y/?] n
Memory Protection Keys (X86_INTEL_MEMORY_PROTECTION_KEYS) [Y/n/?] y
TSX enable mode
> 1. off (X86_INTEL_TSX_MODE_OFF)
  2. on (X86_INTEL_TSX_MODE_ON)
  3. auto (X86_INTEL_TSX_MODE_AUTO)
choice[1-3?]: 1
EFI runtime service support (EFI) [Y/n/?] y
  EFI stub support (EFI_STUB) [Y/n/?] y
    EFI mixed-mode support (EFI_MIXED) [Y/n/?] y
Timer frequency
  1. 100 HZ (HZ_100)
  2. 250 HZ (HZ_250)
  3. 300 HZ (HZ_300)
> 4. 1000 HZ (HZ_1000)
choice[1-4?]: 4
kexec system call (KEXEC) [Y/n/?] y
kexec file based system call (KEXEC_FILE) [N/y/?] n
kernel crash dumps (CRASH_DUMP) [Y/n/?] y
kexec jump (KEXEC_JUMP) [N/y/?] n
Physical address where the kernel is loaded (PHYSICAL_START) [0x1000000] 0x1000000
Build a relocatable kernel (RELOCATABLE) [Y/?] y
  Randomize the address of the kernel image (KASLR) (RANDOMIZE_BASE) [Y/n/?] y
Alignment value to which kernel should be aligned (PHYSICAL_ALIGN) [0x200000] 0x200000
Randomize the kernel memory sections (RANDOMIZE_MEMORY) [Y/n/?] y
Set default setting of cpu0_hotpluggable (BOOTPARAM_HOTPLUG_CPU0) [N/y/?] n
Debug CPU0 hotplug (DEBUG_HOTPLUG_CPU0) [N/y/?] n
Disable the 32-bit vDSO (needed for glibc 2.3.3) (COMPAT_VDSO) [N/y/?] n
vsyscall table for legacy applications
  1. Full emulation (LEGACY_VSYSCALL_EMULATE)
> 2. Emulate execution only (LEGACY_VSYSCALL_XONLY)
  3. None (LEGACY_VSYSCALL_NONE)
choice[1-3?]: 2
Built-in kernel command line (CMDLINE_BOOL) [N/y/?] n
*
* CPU Idle
*
CPU idle PM support (CPU_IDLE) [Y/?] y
  Ladder governor (for periodic timer tick) (CPU_IDLE_GOV_LADDER) [N/y/?] n
  Menu governor (for tickless system) (CPU_IDLE_GOV_MENU) [Y/?] y
  Timer events oriented (TEO) governor (for tickless systems) (CPU_IDLE_GOV_TEO) [N/y/?] n
  Haltpoll governor (for virtualized systems) (CPU_IDLE_GOV_HALTPOLL) [N/y/?] (NEW) 
  Halt poll cpuidle driver (HALTPOLL_CPUIDLE) [Y/n/m/?] (NEW) 
*
* Block devices
*
Block devices (BLK_DEV) [Y/n/?] y
  Null test block driver (BLK_DEV_NULL_BLK) [N/m/y/?] n
  Normal floppy disk support (BLK_DEV_FD) [N/m/y/?] n
  Block Device Driver for Micron PCIe SSDs (BLK_DEV_PCIESSD_MTIP32XX) [N/m/y/?] n
  Micro Memory MM5415 Battery Backed RAM support (BLK_DEV_UMEM) [N/m/y/?] n
  Loopback device support (BLK_DEV_LOOP) [Y/n/m/?] y
    Number of loop devices to pre-create at init time (BLK_DEV_LOOP_MIN_COUNT) [8] 8
    Cryptoloop Support (DEPRECATED) (BLK_DEV_CRYPTOLOOP) [N/m/y/?] n
  DRBD Distributed Replicated Block Device support (BLK_DEV_DRBD) [N/m/y/?] n
  Network block device support (BLK_DEV_NBD) [N/m/y/?] n
  STEC S1120 Block Driver (BLK_DEV_SKD) [N/m/y/?] n
  Promise SATA SX8 support (BLK_DEV_SX8) [N/m/y/?] n
  RAM block device support (BLK_DEV_RAM) [N/m/y/?] n
  Packet writing on CD/DVD media (DEPRECATED) (CDROM_PKTCDVD) [N/m/y/?] n
  ATA over Ethernet support (ATA_OVER_ETH) [N/m/y/?] n
  Virtio block driver (VIRTIO_BLK) [N/m/y/?] (NEW) 
  Rados block device (RBD) (BLK_DEV_RBD) [N/m/y/?] n
  IBM Flash Adapter 900GB Full Height PCIe Device Driver (BLK_DEV_RSXX) [N/m/y/?] n
*
* Network device support
*
Network device support (NETDEVICES) [Y/n/?] y
  Network core driver support (NET_CORE) [Y/n/?] y
    Bonding driver support (BONDING) [N/m/y/?] n
    Dummy net driver support (DUMMY) [N/m/y/?] n
    WireGuard secure network tunnel (WIREGUARD) [N/m/y/?] n
    EQL (serial line load balancing) support (EQUALIZER) [N/m/y/?] n
    Fibre Channel driver support (NET_FC) [N/y/?] n
    MAC-VLAN support (MACVLAN) [N/m/y/?] n
    IP-VLAN support (IPVLAN) [N/m/y/?] n
    Virtual eXtensible Local Area Network (VXLAN) (VXLAN) [N/m/y/?] n
    Generic Network Virtualization Encapsulation (GENEVE) [N/m/y/?] n
    Bare UDP Encapsulation (BAREUDP) [N/m/y/?] n
    GPRS Tunneling Protocol datapath (GTP-U) (GTP) [N/m/y/?] n
    IEEE 802.1AE MAC-level encryption (MACsec) (MACSEC) [N/m/y/?] n
    Network console logging support (NETCONSOLE) [Y/n/m/?] y
    Universal TUN/TAP device driver support (TUN) [N/m/y/?] n
    Support for cross-endian vnet headers on little-endian kernels (TUN_VNET_CROSS_LE) [N/y/?] n
    Virtual ethernet pair device (VETH) [N/m/y/?] n
    Virtio network driver (VIRTIO_NET) [N/m/y/?] (NEW) 
    Virtual netlink monitoring device (NLMON) [N/m/y/?] n
  FDDI driver support (FDDI) [N/m/y/?] n
  HIPPI driver support (HIPPI) [N/y/?] n
  General Instruments Surfboard 1000 (NET_SB1000) [N/m/y/?] n
  PPP (point-to-point protocol) support (PPP) [N/m/y/?] n
  SLIP (serial line) support (SLIP) [N/m/y/?] n
  *
  * Enable WiMAX (Networking options) to see the WiMAX drivers
  *
  VMware VMXNET3 ethernet driver (VMXNET3) [N/m/y/?] n
  FUJITSU Extended Socket Network Device driver (FUJITSU_ES) [N/m/y/?] n
  Simulated networking device (NETDEVSIM) [N/m/y/?] n
  Failover driver (NET_FAILOVER) [N/m/y/?] n
*
* Mice
*
Mice (INPUT_MOUSE) [Y/n/?] y
  PS/2 mouse (MOUSE_PS2) [Y/n/m/?] y
    Elantech PS/2 protocol extension (MOUSE_PS2_ELANTECH) [N/y/?] n
    Sentelic Finger Sensing Pad PS/2 protocol extension (MOUSE_PS2_SENTELIC) [N/y/?] n
    eGalax TouchKit PS/2 protocol extension (MOUSE_PS2_TOUCHKIT) [N/y/?] n
    Virtual mouse (vmmouse) (MOUSE_PS2_VMMOUSE) [N/y/?] (NEW) 
  Serial mouse (MOUSE_SERIAL) [N/m/y/?] n
  Apple USB Touchpad support (MOUSE_APPLETOUCH) [N/m/y/?] n
  Apple USB BCM5974 Multitouch trackpad support (MOUSE_BCM5974) [N/m/y/?] n
  Cypress APA I2C Trackpad support (MOUSE_CYAPA) [N/m/y/?] n
  ELAN I2C Touchpad support (MOUSE_ELAN_I2C) [N/m/y/?] n
  DEC VSXXX-AA/GA mouse and VSXXX-AB tablet (MOUSE_VSXXXAA) [N/m/y/?] n
  Synaptics I2C Touchpad support (MOUSE_SYNAPTICS_I2C) [N/m/y/?] n
  Synaptics USB device support (MOUSE_SYNAPTICS_USB) [N/m/y/?] n
*
* Hardware Random Number Generator Core support
*
Hardware Random Number Generator Core support (HW_RANDOM) [Y/n/m/?] y
  Timer IOMEM HW Random Number Generator support (HW_RANDOM_TIMERIOMEM) [N/m/y/?] n
  Intel HW Random Number Generator support (HW_RANDOM_INTEL) [N/m/y/?] n
  AMD HW Random Number Generator support (HW_RANDOM_AMD) [N/m/y/?] n
  Silex Insight BA431 Random Number Generator support (HW_RANDOM_BA431) [N/m/y/?] n
  VIA HW Random Number Generator support (HW_RANDOM_VIA) [Y/n/m/?] y
  VirtIO Random Number Generator support (HW_RANDOM_VIRTIO) [N/m/y/?] (NEW) 
  Xiphera FPGA based True Random Number Generator support (HW_RANDOM_XIPHERA) [N/m/y/?] n
*
* PTP clock support
*
PTP clock support (PTP_1588_CLOCK) [Y/n/m/?] y
*
* Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
*
KVM virtual PTP clock (PTP_1588_CLOCK_KVM) [Y/n/m/?] (NEW) 
IDT 82P33xxx PTP clock (PTP_1588_CLOCK_IDT82P33) [N/m/y/?] n
IDT CLOCKMATRIX as PTP clock (PTP_1588_CLOCK_IDTCM) [N/m/y/?] n
VMware virtual PTP clock (PTP_1588_CLOCK_VMW) [N/m/y/?] (NEW) 
*
* Graphics support
*
VGA Arbitration (VGA_ARB) [Y/?] y
  Maximum number of GPUs (VGA_ARB_MAX_GPUS) [16] 16
Laptop Hybrid Graphics - GPU switching support (VGA_SWITCHEROO) [N/y/?] n
ATI Radeon (DRM_RADEON) [N/m/y/?] n
AMD GPU (DRM_AMDGPU) [N/m/y/?] n
Nouveau (NVIDIA) cards (DRM_NOUVEAU) [N/m/y/?] n
Intel 8xx/9xx/G3x/G4x/HD Graphics (DRM_I915) [Y/n/m/?] y
  Force probe driver for selected new Intel hardware (DRM_I915_FORCE_PROBE) [] 
  Enable capturing GPU state following a hang (DRM_I915_CAPTURE_ERROR) [Y/n/?] y
    Compress GPU error state (DRM_I915_COMPRESS_ERROR) [Y/n/?] y
  Always enable userptr support (DRM_I915_USERPTR) [Y/n/?] y
  Enable Intel GVT-g graphics virtualization host support (DRM_I915_GVT) [N/y/?] n
Virtual GEM provider (DRM_VGEM) [N/m/y/?] n
Virtual KMS (EXPERIMENTAL) (DRM_VKMS) [N/m/y/?] n
DRM driver for VMware Virtual GPU (DRM_VMWGFX) [N/m/y/?] n
Intel GMA5/600 KMS Framebuffer (DRM_GMA500) [N/m/y/?] n
DisplayLink (DRM_UDL) [N/m/y/?] n
AST server chips (DRM_AST) [N/m/y/?] n
Matrox G200 (DRM_MGAG200) [N/m/y/?] n
QXL virtual GPU (DRM_QXL) [N/m/y/?] n
DRM Support for bochs dispi vga interface (qemu stdvga) (DRM_BOCHS) [N/m/y/?] n
Virtio GPU driver (DRM_VIRTIO_GPU) [N/m/y/?] (NEW) 
ETNAVIV (DRM support for Vivante GPU IP cores) (DRM_ETNAVIV) [N/m/y/?] n
Cirrus driver for QEMU emulated device (DRM_CIRRUS_QEMU) [N/m/y/?] n
GM12U320 driver for USB projectors (DRM_GM12U320) [N/m/y/?] n
Virtual Box Graphics Card (DRM_VBOXVIDEO) [N/m/y/?] n
*
* Virtio drivers
*
Virtio drivers (VIRTIO_MENU) [Y/n/?] y
  PCI driver for virtio devices (VIRTIO_PCI) [Y/n/m/?] y
    Support for legacy virtio draft 0.9.X and older devices (VIRTIO_PCI_LEGACY) [Y/n/?] (NEW) 
  Virtio balloon driver (VIRTIO_BALLOON) [N/m/y/?] (NEW) 
  Virtio input driver (VIRTIO_INPUT) [N/m/y/?] (NEW) 
  Platform bus driver for memory mapped virtio devices (VIRTIO_MMIO) [N/m/y/?] n
*
* Microsoft Hyper-V guest support
*
Microsoft Hyper-V client drivers (HYPERV) [N/m/y/?] (NEW) 
*
* Hardware crypto devices
*
Hardware crypto devices (CRYPTO_HW) [Y/n/?] y
  Support for VIA PadLock ACE (CRYPTO_DEV_PADLOCK) [N/m/y/?] n
  Support for Microchip / Atmel ECC hw accelerator (CRYPTO_DEV_ATMEL_ECC) [N/m/y/?] n
  Support for Microchip / Atmel SHA accelerator and RNG (CRYPTO_DEV_ATMEL_SHA204A) [N/m/y/?] n
  Support for AMD Secure Processor (CRYPTO_DEV_CCP) [N/y/?] n
  Support for Intel(R) DH895xCC (CRYPTO_DEV_QAT_DH895xCC) [N/m/y/?] n
  Support for Intel(R) C3XXX (CRYPTO_DEV_QAT_C3XXX) [N/m/y/?] n
  Support for Intel(R) C62X (CRYPTO_DEV_QAT_C62X) [N/m/y/?] n
  Support for Intel(R) DH895xCC Virtual Function (CRYPTO_DEV_QAT_DH895xCCVF) [N/m/y/?] n
  Support for Intel(R) C3XXX Virtual Function (CRYPTO_DEV_QAT_C3XXXVF) [N/m/y/?] n
  Support for Intel(R) C62X Virtual Function (CRYPTO_DEV_QAT_C62XVF) [N/m/y/?] n
  Support for Cavium CNN55XX driver (CRYPTO_DEV_NITROX_CNN55XX) [N/m/y/?] n
  VirtIO crypto driver (CRYPTO_DEV_VIRTIO) [N/m/y/?] (NEW) 
  Inside Secure's SafeXcel cryptographic engine driver (CRYPTO_DEV_SAFEXCEL) [N/m/y/?] n
  Support for amlogic cryptographic offloader (CRYPTO_DEV_AMLOGIC_GXL) [N/m/y/?] n
*
* Lock Debugging (spinlocks, mutexes, etc...)
*
Lock debugging: prove locking correctness (PROVE_LOCKING) [Y/n/?] y
  Enable raw_spinlock - spinlock nesting checks (PROVE_RAW_LOCK_NESTING) [N/y/?] (NEW) 
Lock usage statistics (LOCK_STAT) [N/y/?] n
RT Mutex debugging, deadlock detection (DEBUG_RT_MUTEXES) [Y/?] y
Spinlock and rw-lock debugging: basic checks (DEBUG_SPINLOCK) [Y/?] y
Mutex debugging: basic checks (DEBUG_MUTEXES) [Y/?] y
Wait/wound mutex debugging: Slowpath testing (DEBUG_WW_MUTEX_SLOWPATH) [Y/?] y
RW Semaphore debugging: basic checks (DEBUG_RWSEMS) [Y/?] y
Lock debugging: detect incorrect freeing of live locks (DEBUG_LOCK_ALLOC) [Y/?] y
Bitsize for MAX_LOCKDEP_ENTRIES (LOCKDEP_BITS) [15] (NEW) 
Bitsize for MAX_LOCKDEP_CHAINS (LOCKDEP_CHAINS_BITS) [16] (NEW) 
Bitsize for MAX_STACK_TRACE_ENTRIES (LOCKDEP_STACK_TRACE_BITS) [19] (NEW) 
Bitsize for STACK_TRACE_HASH_SIZE (LOCKDEP_STACK_TRACE_HASH_BITS) [14] (NEW) 
Bitsize for elements in circular_queue struct (LOCKDEP_CIRCULAR_QUEUE_BITS) [12] (NEW) 
Lock dependency engine debugging (DEBUG_LOCKDEP) [N/y/?] (NEW) 
Sleep inside atomic section checking (DEBUG_ATOMIC_SLEEP) [N/y/?] n
Locking API boot-time self-tests (DEBUG_LOCKING_API_SELFTESTS) [N/y/?] n
torture tests for locking (LOCK_TORTURE_TEST) [N/m/y/?] n
Wait/wound mutex selftests (WW_MUTEX_SELFTEST) [N/m/y/?] n
torture tests for smp_call_function*() (SCF_TORTURE_TEST) [N/m/y/?] n
Debugging for csd_lock_wait(), called from smp_call_function*() (CSD_LOCK_WAIT_DEBUG) [N/y/?] n
*
* RCU Debugging
*
RCU list lockdep debugging (PROVE_RCU_LIST) [Y/n/?] y
performance tests for RCU (RCU_SCALE_TEST) [N/m/y/?] n
torture tests for RCU (RCU_TORTURE_TEST) [Y/n/m/?] y
Scalability tests for read-side synchronization (RCU and others) (RCU_REF_SCALE_TEST) [N/m/y/?] n
RCU CPU stall timeout in seconds (RCU_CPU_STALL_TIMEOUT) [21] 21
Enable tracing for RCU (RCU_TRACE) [N/y/?] n
Provide debugging asserts for adding NO_HZ support to an arch (RCU_EQS_DEBUG) [N/y/?] n
Provide debug RCU implementation with short grace periods (RCU_STRICT_GRACE_PERIOD) [N/y/?] (NEW) 
*
* Tracers
*
Tracers (FTRACE) [Y/n/?] y
  Boot-time Tracing support (BOOTTIME_TRACING) [N/y/?] n
  Kernel Function Tracer (FUNCTION_TRACER) [N/y/?] n
  Trace max stack (STACK_TRACER) [N/y/?] n
  Interrupts-off Latency Tracer (IRQSOFF_TRACER) [N/y/?] n
  Scheduling Latency Tracer (SCHED_TRACER) [N/y/?] n
  Tracer to detect hardware latencies (like SMIs) (HWLAT_TRACER) [N/y/?] n
  Memory mapped IO tracing (MMIOTRACE) [N/y/?] n
  Trace syscalls (FTRACE_SYSCALLS) [N/y/?] n
  Create a snapshot trace buffer (TRACER_SNAPSHOT) [N/y/?] n
  Branch Profiling
  > 1. No branch profiling (BRANCH_PROFILE_NONE)
    2. Trace likely/unlikely profiler (PROFILE_ANNOTATED_BRANCHES)
    3. Profile all if conditionals (PROFILE_ALL_BRANCHES)
  choice[1-3?]: 1
  Support for tracing block IO actions (BLK_DEV_IO_TRACE) [Y/n/?] y
  Enable kprobes-based dynamic events (KPROBE_EVENTS) [Y/n/?] y
  Enable uprobes-based dynamic events (UPROBE_EVENTS) [Y/n/?] y
  Synthetic trace events (SYNTH_EVENTS) [N/y/?] n
  Histogram triggers (HIST_TRIGGERS) [N/y/?] n
  Trace event injection (TRACE_EVENT_INJECT) [N/y/?] n
  Add tracepoint that benchmarks tracepoints (TRACEPOINT_BENCHMARK) [N/y/?] n
  Ring buffer benchmark stress tester (RING_BUFFER_BENCHMARK) [N/m/y/?] n
  Show eval mappings for trace events (TRACE_EVAL_MAP_FILE) [N/y/?] n
  Perform a startup test on ftrace (FTRACE_STARTUP_TEST) [N/y/?] n
  Ring buffer startup self test (RING_BUFFER_STARTUP_TEST) [N/y/?] n
  Test module to create a preempt / IRQ disable delay thread to test latency tracers (PREEMPTIRQ_DELAY_TEST) [N/m/?] (NEW) 
  Test module for in-kernel kprobe event generation (KPROBE_EVENT_GEN_TEST) [N/m/y/?] n
#
# configuration written to .config
#
